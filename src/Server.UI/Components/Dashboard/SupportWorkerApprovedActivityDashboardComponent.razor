@using Cfo.Cats.Application.Features.Dashboard.Queries
@using ApexCharts
@inherits CatsComponent<GetApprovedActivitiesPerSupportWorker.ApprovedActivitiesPerSupportWorkerDto>

@if (Loading)
{
    <MudLoading Text="Loading" />
}

@if (ErrorMessage is not null)
{
    <MudAlert Variant="Variant.Outlined" Severity="Severity.Error">
        @ErrorMessage
    </MudAlert>
}

@if (Data is not null)
{
    <MudGrid Spacing="2">
        <MudItem xs="12" Style="height: calc(100vh - 150px);">
            <MudStack Row="true" Breakpoint="Breakpoint.SmAndDown" Style="height:100%; width:100%;">

@*                 <!-- This is the left column -->
                <MudStack Style="width: 150px;">
                    <MudChip T="string">Custody (@Data.Custody)</MudChip>
                    <MudChip T="string">Community (@Data.Community)</MudChip>
                </MudStack> *@

                <!-- Right hand content -->
                <MudStack Style="flex:1; height:80%; overflow:auto;">
                    @if (VisualMode)
                    {
                        <div style="width: 100%; height: 100%; position: relative;">
                            <!-- Chips overlaid on chart -->
                            <div style="position: absolute; top: 16px; left: 24px; z-index: 10; display: flex; gap: 8px;">
                                <MudChip T="string" Size="MudBlazor.Size.Small">Custody (@Data.Custody)</MudChip>
                                <MudChip T="string" Size="MudBlazor.Size.Small">Community (@Data.Community)</MudChip>
                            </div>
                            <div style="padding-top: 50px;">
                            <ApexChart TItem="LocationActivityCount"
                                       Options="chartOptions"
                                       Height="@($"{Math.Max(300, Data.Details.Select(d => d.Name).Distinct().Count() * 60)}px")">

                                @foreach (var activityType in Data.Details.Select(d => d.ActivityType.Name).Distinct().OrderBy(t => t))
                                {
                                    <ApexPointSeries TItem="LocationActivityCount"
                                                     Items="@GetSeriesDataForActivityType(activityType)"
                                                     Name="@activityType"
                                                     SeriesType="SeriesType.Bar"
                                                     XValue="@(e => e.Location)"
                                                     YValue="@(e => (decimal)e.Count)"
                                                     OrderBy="e => e.X" />
                                }
                            </ApexChart>
                            </div>
                        </div>
                    }
                    else
                    {
                        <MudTable Items="@Data.Details" MultiSelection="false" Striped="true" Hover="true">
                            <HeaderContent>
                                <MudTh>Location</MudTh>
                                <MudTh>Type</MudTh>
                                <MudTh>Activity Type</MudTh>
                                <MudTh>Total Count</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Location">@context.Name</MudTd>
                                <MudTd DataLabel="Type">@context.LocationType.Name</MudTd>
                                <MudTd DataLabel="Activity Type">@context.ActivityType</MudTd>
                                <MudTd DataLabel="Total Count">@context.TotalCount</MudTd>
                            </RowTemplate>
                            <PagerContent>
                                <MudTablePager PageSizeOptions="new int[] { 10, 20 }" />
                            </PagerContent>
                        </MudTable>
                    }
                </MudStack>
            </MudStack>
        </MudItem>
    </MudGrid>
}