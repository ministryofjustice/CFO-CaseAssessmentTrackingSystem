@using System.ComponentModel
<MudStepExtended IsResultStep="true">
    <MudItem Class="d-flex justify-center">
        @if (SubmissionSuccess)
        {
            <MudStack Row="false">
                <MudText Typo="Typo.h4">@SuccessText</MudText>

                @ChildContent

                <MudIcon Size="Size.Large" Class="align-self-center" Icon="@Icons.Material.Filled.Check" Color="Color.Success" />
                <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Success" OnClick="GotoParticipant">
                    Continue
                </MudButton>
            </MudStack>
        }
        else if (Processing)
        {
            <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
        }
        else
        {
            <MudStack Row="true">
                <MudText Typo="Typo.h4">@FailureText</MudText>
                <MudIcon Size="Size.Large" Class="align-self-center" Icon="@Icons.Material.Filled.Clear" Color="Color.Error" />
            </MudStack>
        }
    </MudItem>
</MudStepExtended>

@code {

    [Parameter, EditorRequired]
    public required bool SubmissionSuccess { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

	[Parameter, EditorRequired]
	public required bool Processing { get; set; }
    
    [Parameter, EditorRequired]
    public required string Upci { get; set; }
    
    private void GotoParticipant() => Navigation.NavigateTo($"/pages/participants/{Upci}");

    

    [Parameter]
    public string SuccessText { get; set; } = "Submitted successfully";

    [Parameter]
    public string FailureText { get; set; } = "An issue occurred while completing your request. Please try again later";
}
