@inherits MudComponentBase
@inject IStringLocalizer<ResetPassword> L
@inject IValidationService Validator
<MudDialog>
    <DialogContent>
        <MudForm Model="@Model" @ref="@form" Validation="@(Validator.ValidateValue(Model))">
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField Label="@L["User Name"]" For="@(() => Model.UserName)" Value="Model.UserName"></MudTextField>
                </MudItem>
                <MudItem xs="12">
                    <MudPasswordField Immediate="true"
                                      Label="@L["New Password"]"
                                      @bind-Value="Model.Password"
                                      For="@(() => Model.Password)"
                                      Variant="Variant.Text"
                                      PasswordMode="true"
                                      Required="true"
                                      Class="mt-4"/>
                </MudItem>
                <MudItem xs="12">
                    <MudPasswordField Immediate="true"
                                      Label="@L["Confirm New Password"]"
                                      @bind-Value="Model.ConfirmPassword"
                                      For="@(() => Model.ConfirmPassword)"
                                      Variant="Variant.Text"
                                      PasswordMode="true"
                                      Required="true"
                                      Class="mt-4"/>
                </MudItem>
            </MudGrid>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">@ConstantString.Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">@ConstantString.Ok</MudButton>
    </DialogActions>
</MudDialog>

@code{
    [CascadingParameter] private MudDialogInstance MudDialog { get; set; } = default!;

    [EditorRequired] [Parameter] public ResetPasswordFormModel Model { get; set; } = default!;

    private MudForm? form;

    private async Task Submit()
    {
        await form!.Validate();
        if (form.IsValid)
        {
            MudDialog.Close(DialogResult.Ok(true));
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    
    

}