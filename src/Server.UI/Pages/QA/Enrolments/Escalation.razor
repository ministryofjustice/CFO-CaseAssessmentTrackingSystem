@page "/pages/qa/enrolments/escalation/{id:guid}"

@attribute [Authorize(Policy = SecurityPolicies.SeniorInternal)]

@using Cfo.Cats.Application.Common.Validators
@using Cfo.Cats.Application.Features.Participants.DTOs
@using Cfo.Cats.Application.Features.Assessments.DTOs
@using Cfo.Cats.Application.Features.QualityAssurance.Commands
@using Cfo.Cats.Application.Features.QualityAssurance.DTOs
@using Cfo.Cats.Application.SecurityConstants
@using Cfo.Cats.Domain.Common.Enums
@using Cfo.Cats.Server.UI.Pages.QA.Enrolments.Components
@inherits CatsComponentBase

@inject IRightToWorkSettings RightToWorkSettings;

<style>
    .document-container {
        width: 90%;
        height: calc(100vh - 350px);
        display: flex;
        justify-content: center;
        align-items: center;
    }


</style>

<QaExternalMessageWarning @ref="warningMessage" />

@if (_participantDto is not null && _participantDto.EnrolmentStatus == EnrolmentStatus.SubmittedToAuthorityStatus)
{
    @if (_queueEntry!.IsAccepted || _queueEntry.IsCompleted)
    {
        <MudAlert Severity="Severity.Warning">
            This entry has already been processed
        </MudAlert>
    }

    @if (RightToWorkSettings.NationalitiesExempted.Contains(_participantDto.Nationality!) == false)
    {
        <MudAlert Severity="Severity.Info">
            This participant requires right to work.
        </MudAlert>
    }

    <MudGrid Style="height: 100vh; width: 100%;">
        <MudItem xs="4" Style="height: calc(100vh - 150px); width: 100%;">
            <ParticipantQaDetails Participant="_participantDto" QueueEntry="_queueEntry" ShowNationality="true" />
        </MudItem>

        <MudItem xs="8" Style="height: 100%; width: 100%;">
            <MudTabs>
                <MudTabPanel Text="QA Notes">
                    <QaNotes ParticipantId="@_participantDto.Id"/>
                </MudTabPanel>

                <MudTabPanel Text="Consent" BadgeColor="Color.Info" BadgeData="@_participantDto.Consents.Length">
                    <ConsentTabPanel ParticipantDto="_participantDto"/>
                </MudTabPanel>
                <MudTabPanel Text="Right To Work" Style="min-width: 185px;" BadgeColor="Color.Info" BadgeData="@_participantDto.RightToWorks.Length">
                    <RightToWorkTabPanel ParticipantDto="_participantDto"/>
                </MudTabPanel>
                <MudTabPanel Text="Assessment" Icon="@(_participantDto.AssessmentJustification is not null ? Icons.Material.Filled.Warning : string.Empty)" IconColor="Color.Warning">
                    <AssessmentTabPanel ParticipantDto="_participantDto" ParticipantAssessmentDto="@_latestParticipantAssessmentDto"/>
                </MudTabPanel>
                <MudTabPanel Text="Submission">
                    @if (_queueEntry.IsCompleted == false)
                    {
                        <MudForm Model="@Command" @ref="_form" Validation="@(Validator.ValidateValue(Command))">
                            <MudItem xs="12">
                                <MudRadioGroup T="SubmitEscalationResponse.EscalationResponse?" @bind-Value="Command.Response" For="@(() => Command.Response)" Required="true">
                                    <MudRadio T="SubmitEscalationResponse.EscalationResponse?" Value="SubmitEscalationResponse.EscalationResponse.Accept" Color="Color.Primary">
                                        Accept
                                    </MudRadio>
                                    <MudRadio T="SubmitEscalationResponse.EscalationResponse?" Value="SubmitEscalationResponse.EscalationResponse.Return" Color="Color.Secondary">
                                        Return
                                    </MudRadio>
                                    <MudRadio T="SubmitEscalationResponse.EscalationResponse?" Value="SubmitEscalationResponse.EscalationResponse.Comment" Color="Color.Secondary">
                                        Comment / Defer
                                    </MudRadio>
                                </MudRadioGroup>
                            </MudItem>
                            <MudDivider Class="py-4" />

                            @if (Command.IsMessageExternal)
                            {
                                <MudAlert Severity="Severity.Warning" Variant="Variant.Outlined">
                                    This comment will be visible to PQA (and internal members of CFO staff)
                                </MudAlert>
                            }
                            else
                            {
                                <MudAlert Severity="Severity.Info" Variant="Variant.Outlined">
                                    This comment will only be visible to internal members of CFO staff
                                </MudAlert>
                            }

                            <MudGrid Class="py-4">
                                <MudItem Class="d-flex align-center" xs="12" md="3" xl="2">
                                    <MudSwitch @bind-Value="Command.IsMessageExternal"
                                    For="() => Command.IsMessageExternal"
                                    Label="External"
                                    Color="Color.Primary" />
                                </MudItem>
                                <MudItem xs="12" md="9" xl="10">
                                    <MudTextField @bind-Value="Command.Message" Label="Message" Lines="5" For="() => Command.Message" MaxLength="@ValidationConstants.NotesLength" Immediate="true" oninput="UpdateCharacterCount" />
                                    <MudText Class="ml-2">Characters: @characterCount / 1000</MudText>
                                </MudItem>
                            </MudGrid>
                        </MudForm>

                        <MudContainer Class="d-flex px-0 pt-8">
                            <MudLoadingButton Color="Color.Primary" OnClick="SubmitToQa" Variant="Variant.Filled" Loading="_saving">Submit</MudLoadingButton>
                        </MudContainer>
                    }
                    else
                    {
                        <MudAlert Variant="Variant.Outlined" Severity="Severity.Info">
                            This entry has already been processed
                        </MudAlert>
                    }
                </MudTabPanel>
            </MudTabs>
        </MudItem>
    </MudGrid>
}