@page "/pages/qa/enrolments/qa1/"

@using Cfo.Cats.Application.Common.Validators
@using Cfo.Cats.Application.Features.Participants.DTOs
@using Cfo.Cats.Application.Features.QualityAssurance.Commands
@using Cfo.Cats.Application.Features.QualityAssurance.DTOs
@using Cfo.Cats.Application.SecurityConstants
@using Cfo.Cats.Domain.Common.Enums
@using Cfo.Cats.Server.UI.Pages.QA.Enrolments.Components

@inherits CatsComponentBase

@attribute [Authorize(Policy = SecurityPolicies.Qa1)]

@inject IRightToWorkSettings RightToWorkSettings;

<style>
    .document-container {
        width: 90%;
        height: calc(100vh - 150px);
        display: flex;
        justify-content: center;
        align-items: center;
    }
       
</style>

<QaExternalMessageWarning @ref="_warningMessage" />

<MudContainer Style="width: 100%; min-width: 480px;" MaxWidth="MaxWidth.ExtraLarge">
    <MudText Typo="Typo.h5" Class="mb-5">
        CFO Enrolment Queue First Pass
    </MudText>

    @if (_participantDto is null)
    {
        <MudButton OnClick="GetQueueItem" ButtonType="ButtonType.Button" StartIcon="@Icons.Material.Filled.QueuePlayNext"
        Variant="Variant.Outlined" Color="Color.Primary">
            Get Next
        </MudButton>
    }

    @if (_participantDto is not null && _participantDto.EnrolmentStatus == EnrolmentStatus.SubmittedToAuthorityStatus)
    {
        @if (_queueEntry!.IsAccepted)
        {
            <MudAlert Severity="Severity.Warning">
                This entry has already been processed
            </MudAlert>
        }

        @if (RightToWorkSettings.NationalitiesExempted.Contains(_participantDto.Nationality!) == false) 
        {
            <MudAlert Severity="Severity.Info">
                This participant requires right to work.
            </MudAlert>
        }

        <MudGrid Style="height: 100vh; width: 100%;">
            <MudItem xs="4" Style="height: calc(100vh - 150px); width: 100%;">
                    <ParticipantQaDetails Participant="_participantDto" QueueEntry="_queueEntry" ShowNationality="true" />
            </MudItem>
            <MudItem xs="8" Style="height: 100%; width: 100%;">
                <MudTabs>
                    <MudTabPanel Text="QA Notes">
                        <QaNotes ParticipantId="@_participantDto.Id"/>
                    </MudTabPanel>

                    <MudTabPanel Text="Consent" BadgeColor="Color.Info" BadgeData="@_participantDto.Consents.Length">
                        <ConsentTabPanel ParticipantDto="_participantDto"/>
                    </MudTabPanel>
                    <MudTabPanel Text="Right To Work" Style="min-width: 185px;" BadgeColor="Color.Info" BadgeData="@_participantDto.RightToWorks.Length">
                        <RightToWorkTabPanel ParticipantDto="_participantDto"/>
                    </MudTabPanel>
                    <MudTabPanel Text="Assessment" Icon="@(_participantDto.AssessmentJustification is not null ? Icons.Material.Filled.Warning : string.Empty)" IconColor="Color.Warning">
                        <AssessmentTabPanel ParticipantDto="_participantDto"/>
                    </MudTabPanel>
                    <MudTabPanel Text="Submission">
                        @if (_queueEntry.IsCompleted == false)
                        {
                            <MudForm Model="@Command" @ref="_form" Validation="@(Validator.ValidateValue(Command))">
                                <MudItem xs="12">
                                    <MudRadioGroup T="bool?" @bind-Value="Command.Accept" For="@(() => Command.Accept)" Required="true">
                                        <MudRadio T="bool?" Value="true" Color="Color.Primary">
                                            Accept
                                        </MudRadio>
                                        <MudRadio T="bool?" Value="false" Color="Color.Secondary">
                                            Return
                                        </MudRadio>
                                    </MudRadioGroup>
                                </MudItem>

                                <MudDivider Class="py-4" />

                                <MudAlert Severity="Severity.Info" Variant="Variant.Outlined">
                                    This comment will only be visible to internal members of CFO staff
                                </MudAlert>

                                <MudGrid Class="py-4">
                                    <MudItem xs="12">
                                        <MudTextField @bind-Value="Command.Message" Label="Message" Lines="5" For="() => Command.Message" MaxLength="@ValidationConstants.NotesLength" Immediate="true" oninput="UpdateCharacterCount" />
                                        <MudText Class="ml-2">Characters: @CharacterCount / 1000</MudText>
                                    </MudItem>
                                </MudGrid>
                            </MudForm>

                            <MudContainer Class="d-flex px-0 pt-8">
                                <MudLoadingButton Color="Color.Primary" OnClick="SubmitToQa" Variant="Variant.Filled" Loading="saving">Submit</MudLoadingButton>
                            </MudContainer>
                        }
                        else
                        {
                            <MudAlert Variant="Variant.Outlined" Severity="Severity.Info">
                                This entry has already been processed
                            </MudAlert>
                        }
                    </MudTabPanel>
                </MudTabs>
            </MudItem>
        </MudGrid>
    }

</MudContainer>
