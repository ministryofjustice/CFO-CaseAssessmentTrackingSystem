@page "/pages/qa/enrolments/pqa/{id:guid}"

@attribute [Authorize(Policy = SecurityPolicies.Pqa)]
@using Cfo.Cats.Application.Common.Validators
@using Cfo.Cats.Application.Features.Participants.DTOs

@using Cfo.Cats.Application.Features.QualityAssurance.Commands
@using Cfo.Cats.Application.Features.QualityAssurance.DTOs

@using Cfo.Cats.Application.SecurityConstants
@using Cfo.Cats.Domain.Common.Enums
@using Cfo.Cats.Server.UI.Pages.QA.Enrolments.Components
@inherits CatsComponentBase

<style>
    .document-container {
        width: 90%;
        height: calc(100vh - 350px);
        display: flex;
        justify-content: center;
        align-items: center;
    }

</style>

@if (_participantDto is not null && _participantDto.EnrolmentStatus == EnrolmentStatus.SubmittedToProviderStatus)
{
    @if (_queueEntry!.IsAccepted || _queueEntry.IsCompleted)
    {
        <MudAlert Severity="Severity.Warning" Class="mb-2">
            This entry has already been processed
        </MudAlert>
    }

    @if(_showRightToWorkWarning)
    {
        <MudAlert Severity="Severity.Warning" Class="mb-2">
            Consent has been granted for this participant, but they require right to work to proceed.
        </MudAlert>
    }

    @if(_participantDto.ConsentStatus == ConsentStatus.GrantedStatus && _participantDto.EnrolmentStatus == EnrolmentStatus.SubmittedToProviderStatus)
    {
        <MudAlert Severity="Severity.Info">
            The consent form has previously been approved for this participant. The Right to Work submission requires verifying.
        </MudAlert>
    }

    <MudGrid Style="height: 100vh; width: 100%;">
        <MudItem xs="4" Style="height: calc(100vh - 150px); width: 100%;">
            <ParticipantQaDetails Participant="_participantDto" QueueEntry="_queueEntry" ShowNationality="@(_participantDto.ConsentStatus == ConsentStatus.GrantedStatus)" />
        </MudItem>

        <MudItem xs="8" Style="height: 100%; width: 100%;">
            <MudTabs>
                <MudTabPanel Text="QA Notes">
                    <QaNotes ParticipantId="@_participantDto.Id"/>
                </MudTabPanel>

                <MudTabPanel Text="Consent" BadgeColor="Color.Info" BadgeData="@_participantDto.Consents.Length">
                    <ConsentTabPanel ParticipantDto="_participantDto"/>
                </MudTabPanel>
                <MudTabPanel Text="Right To Work" Style="min-width: 210px;" BadgeColor="Color.Info" BadgeData="@_participantDto.RightToWorks.Length" Icon="@_rtwIcon" IconColor="@_rtwIconColor" ToolTip="@_rtwInfo">
                    <RightToWorkTabPanel ParticipantDto="_participantDto" ShowRightToWorkWarning="@_showRightToWorkWarning" />
                </MudTabPanel>
                <MudTabPanel Text="Assessment" Icon="@(_participantDto.AssessmentJustification is not null ? Icons.Material.Filled.Warning : string.Empty)" IconColor="Color.Warning">
                    <AssessmentTabPanel ParticipantDto="_participantDto"/>
                </MudTabPanel>
                <MudTabPanel Text="Submission">
                    @if (_queueEntry.IsCompleted == false)
                    {
                        <MudForm Model="@Command" @ref="_form" Validation="@(Validator.ValidateValue(Command))">
                            <MudItem xs="12">
                                <MudRadioGroup T="SubmitPqaResponse.PqaResponse?" @bind-Value="Command.Response" For="@(() => Command.Response)" Required="true">
                                    <MudRadio T="SubmitPqaResponse.PqaResponse?" Value="SubmitPqaResponse.PqaResponse.Accept" Color="Color.Primary" Disabled="@_pqaResponseDisabled">
                                        Accept
                                    </MudRadio>
                                    <MudRadio T="SubmitPqaResponse.PqaResponse?" Value="SubmitPqaResponse.PqaResponse.Return" Color="Color.Secondary">
                                        Return
                                    </MudRadio>
                                    <MudRadio T="SubmitPqaResponse.PqaResponse?" Value="SubmitPqaResponse.PqaResponse.Comment" Color="Color.Secondary" Disabled="@_pqaResponseDisabled">
                                        Comment / Defer
                                    </MudRadio>
                                </MudRadioGroup>
                            </MudItem>

                            <MudTextField @bind-Value="Command.Message" Label="Message" Lines="5" Class="mt-4" For="() => Command.Message" MaxLength="@ValidationConstants.NotesLength" Immediate="true" oninput="UpdateCharacterCount"/>
                            <MudText Class="ml-2">Characters: @CharacterCount / 1000</MudText>
                        </MudForm>
                        <MudContainer Class="d-flex px-0 pt-8">
                            <MudLoadingButton Color="Color.Primary" OnClick="SubmitToQa" Variant="Variant.Filled" Loading="saving">Submit</MudLoadingButton>
                        </MudContainer>
                    }
                    else
                    {
                        <MudAlert Variant="Variant.Outlined" Severity="Severity.Info">
                            This entry has already been processed
                        </MudAlert>
                    }
                </MudTabPanel>
            </MudTabs>
        </MudItem>
    </MudGrid>
}

