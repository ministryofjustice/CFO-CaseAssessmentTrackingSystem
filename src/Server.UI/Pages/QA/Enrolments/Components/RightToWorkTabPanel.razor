@using Cfo.Cats.Application.Features.Documents.Queries
@using Cfo.Cats.Application.Features.Participants.Queries
@using Cfo.Cats.Application.Features.Participants.DTOs
@inherits CatsComponentBase

@* 
    Show warning if no right to work has been provided 
    and the participants' nationality is not exempt
*@
@if (ShowRightToWorkWarning)
{
    <MudAlert Severity="Severity.Warning" Variant="Variant.Outlined" Square="true" Class="my-2">@ConstantString.RightToWorkIsRequiredMessage</MudAlert>
}

<MudRadioGroup T="Guid" @bind-Value="_selectedDocument">
    @foreach (var rtw in ParticipantDto.RightToWorks.OrderByDescending(c => c.ValidFrom))
    {
        <MudRadio T="Guid" Color="Color.Primary" Value="@rtw.DocumentId!.Value">
            @rtw.FileName (@rtw.ValidFrom.ToShortDateString() - @rtw.ValidTo.ToShortDateString())
        </MudRadio>
    }
</MudRadioGroup>

@if (_selectedDocument != Guid.Empty)
{
    <DocumentDisplay DocumentId="_selectedDocument" />
}

@code{

    private Guid _selectedDocument = Guid.Empty;

    [CascadingParameter]
    public UserProfile UserProfile { get; set; } = default!;

    [Parameter] [EditorRequired]
    public ParticipantDto ParticipantDto { get; set; } = default!;
    //public ParticipantSummaryDto ParticipantSummaryDto { get; set; } = default!;
    [Parameter]
    public bool ShowRightToWorkWarning { get; set; } = default!;

    protected override void OnInitialized()
    {
        if (_selectedDocument == Guid.Empty)
        {
            var latest = ParticipantDto.RightToWorks.MaxBy(c => c.ValidTo);
            if (latest is not null)
            {
                _selectedDocument = latest.DocumentId.GetValueOrDefault();
            }
        }

    }
    
}