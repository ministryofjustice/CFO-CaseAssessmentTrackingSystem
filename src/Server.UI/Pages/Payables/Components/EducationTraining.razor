@using Cfo.Cats.Application.Features.Payables.Commands
@using Cfo.Cats.Application.Features.Payables.DTOs
@using Cfo.Cats.Domain.Common.Enums
@using Cfo.Cats.Server.UI.Pages.Payables.Components
@inherits CatsComponentBase

@inject IStringLocalizer<EducationTraining> L

@if (Model is not null)
{
    <MudForm Model="Model" Validation="Validator.ValidateValue(Model)">
        <MudGrid>
            <MudItem xs="12">
                <MudTextField Label="@Model.GetMemberDescription(x => x.CourseTitle)" @bind-Value="Model.CourseTitle" For="() => Model.CourseTitle" />
            </MudItem>
            <MudItem xs="12">
                <MudTextField Label="@Model.GetMemberDescription(x => x.CourseUrl)" @bind-Value="Model.CourseUrl" For="() => Model.CourseUrl" />
            </MudItem>
            <MudItem xs="12">
                <MudSelect @bind-Value="Model.CourseLevel"
                For="() => Model.CourseLevel"
                Label="@Model.GetMemberDescription(x => x.CourseLevel)">
                    @foreach (var courseLevel in PicklistService.DataSource
                    .Where(c => c.Name == Picklist.EducationLevel)
                    .OrderBy(c => c.Text))
                    {
                        <MudSelectItem Value="@courseLevel.Value">@courseLevel.Text</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="12">
                <MudDatePicker @bind-Date="Model.CourseCommencedOn"
                For="() => Model.CourseCommencedOn"
                Label="@Model.GetMemberDescription(x => x.CourseCommencedOn)"
                Editable="true"
                PickerVariant="PickerVariant.Dialog" />
            </MudItem>
            <MudItem xs="12">
                <MudDatePicker @bind-Date="Model.CourseCompletedDate"
                For="() => Model.CourseCompletedDate"
                Label="@Model.GetMemberDescription(x => x.CourseCompletedDate)"
                MinDate="@Model.CourseCommencedOn"
                Editable="true"
                PickerVariant="PickerVariant.Dialog" />
            </MudItem>
            <MudItem xs="12">
                <MudSelect @bind-Value="Model.CourseCompletionStatus" For="() => Model.CourseCompletionStatus"
                Label="@Model.GetMemberDescription(x => x.CourseCompletionStatus)">
                    <MudSelectItem Value="CourseCompletionStatus.Yes">@CourseCompletionStatus.Yes.Name</MudSelectItem>
                    <MudSelectItem Value="CourseCompletionStatus.No">@CourseCompletionStatus.No.Name</MudSelectItem>
                    <MudSelectItem Value="CourseCompletionStatus.NotApplicable">@CourseCompletionStatus.NotApplicable.Name</MudSelectItem>
                </MudSelect>
            </MudItem>
        </MudGrid>
    </MudForm>
}
@code {
    [Inject]
    private IPicklistService PicklistService { get; set; } = default!;

    [Parameter, EditorRequired]
    public required EducationTrainingDto Model { get; set; }
}
