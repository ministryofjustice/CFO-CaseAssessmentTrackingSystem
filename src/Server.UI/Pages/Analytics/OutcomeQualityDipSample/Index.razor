@attribute [Authorize(Policy = SecurityPolicies.OutcomeQualityDipChecks)]

@page "/pages/analytics/outcome-quality-dip-sampling"

@using Cfo.Cats.Application.SecurityConstants
@using Cfo.Cats.Domain.Common.Enums
@using Humanizer

@inherits CatsComponentBase

<CatsBreadcrumbs Items="@Items"></CatsBreadcrumbs>

@if (_isLoading)
{
    <MudLoading Text="Loading.."/>
}



<MudForm Model="Query" FieldChanged="ReloadAsync">
    <MudGrid Class="my-2">
        <MudItem xs="12" md="2">
            <MudSelect Label="Month" @bind-Value="Query.Month">
                @foreach (var month in Enumerable.Range(1, 12))
                {
                    <MudSelectItem Value="month">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(month)</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem xs="12" md="1">
            <MudSelect Label="Year" @bind-Value="Query.Year">
                @foreach (var year in Enumerable.Range(2024, DateTime.Now.Year - 2023))
                {
                    <MudSelectItem Value="year">@year</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem xs="12" md="2">
            <ContractAutoComplete TenantId="@(CurrentUser?.TenantId ?? "xxx")" @bind-Value="Query.Contract"/>
        </MudItem>
        <MudItem xs="12" md="2">
            <MudSwitch T="bool" Value="false" Label="Only show in progress" Color="Color.Primary"/>
        </MudItem>
    </MudGrid>
</MudForm>



<MudGrid Class="mt-2">
    @if (_errorMessage is not null)
    {
        <MudAlert Severity="Severity.Warning">
            @_errorMessage
        </MudAlert>
    }
    @foreach (var sample in _samples)
    {
        <MudItem xs="12" md="6" lg="4">
            <MudCard>
                <MudCardHeader Class="justify-space-between">
                    <MudStack Style="width: 100%">
                        <MudStack Row="true">
                            <MudText Typo="Typo.h4">@sample.ContractDescription</MudText>
                            @{
                                var color = sample.Status switch
                                {
                                    var type when type == DipSampleStatus.InProgress => Color.Warning,
                                    var type when type == DipSampleStatus.Reviewed => Color.Secondary,
                                    var type when type == DipSampleStatus.Verified => Color.Primary,
                                    var type when type == DipSampleStatus.Finalised => Color.Success,
                                    _ => Color.Primary
                                };
                            }
                            <MudSpacer/>
                            <MudChip T="string" Color="color" Size="Size.Small">
                                @sample.Status.Name
                            </MudChip>
                        </MudStack>
                        <MudText Typo="Typo.h5">(@($"{sample.PeriodFrom:MMM yyyy}"))</MudText>
                    </MudStack>
                </MudCardHeader>
                <MudCardContent>
                    <MudText>Sample size of <b>@sample.Size</b> participant(s)</MudText>
                    <MudText>Generated @sample.CreatedOn.Humanize() (@sample.CreatedOn.ToShortDateString())</MudText>
                    <MudProgressLinear Class="mt-4" Rounded Value="@sample.TotalScored" Max="sample.Size" Color="Color.Primary">
                    </MudProgressLinear>
                    <MudText Typo="Typo.subtitle1" Style="text-align: center">@sample.TotalScored / @sample.Size complete</MudText>

                    @*@if(sample.Contributors is { Length: > 0 })
                        {
                            <div class="d-flex">
                                <MudText>Contributors</MudText>
                                <MudAvatarGroup Max="3" Spacing="3">
                                    @foreach(var contributor in sample.Contributors)
                                    {
                                        <MudTooltip Text="@contributor">
                                            <MudAvatar Size="Size.Small">@string.Join(string.Empty, contributor!.ToUpper().Split(' ').Select(name => name[0]))</MudAvatar>
                                        </MudTooltip>
                                    }
                                </MudAvatarGroup>
                            </div>
                        } *@
                </MudCardContent>
                <MudCardActions Class="justify-space-between">
                    <MudStack Row="true">
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" Href="@($"/pages/analytics/outcome-quality-dip-sampling/{sample.Id}")">
                            @ConstantString.View
                        </MudButton>
                    </MudStack>

                    @{
                        if (sample.Score.HasValue)
                        {
                            <MudTooltip>
                                <TooltipContent>
                                    <MudStack>
                                        <MudText>CSO: @(sample.CsoScore.HasValue ? $"{sample.CsoPercentage}% ({sample.CsoScore})" : "Awaiting result")</MudText>
                                        <MudText>CPM: @(sample.CpmScore.HasValue ? $"{sample.CpmPercentage}% ({sample.CpmScore})" : "Awaiting result")</MudText>
                                        <MudText>Final: @(sample.FinalScore.HasValue ? $"{sample.FinalPercentage}% ({sample.FinalScore})" : "Awaiting result")</MudText>
                                    </MudStack>
                                </TooltipContent>
                                <ChildContent>
                                    <MudRating SelectedValue="sample.Score.Value" ReadOnly/>
                                </ChildContent>
                            </MudTooltip>
                        }
                        else
                        {
                            <MudTooltip Text="Score will become available after completion">
                                <MudSkeleton Animation="Animation.Wave" Width="120px"/>
                            </MudTooltip>
                        }
                    }
                </MudCardActions>
            </MudCard>
        </MudItem>
    }
</MudGrid>
