@using Cfo.Cats.Application.Common.Validators
@using Cfo.Cats.Application.Features.ManagementInformation.Commands.AddOutcomeQualityDipSampleCso
@using Cfo.Cats.Domain.Common.Enums
<MudForm @ref="_form" Model="Command" Validation="@(Validator.ValidateValue(Command))" Class="ma-2">
    <MudGrid >
        
        <MudItem xs="12" md="8">
            <MudStack Row="true" AlignItems="AlignItems.Center">
                <MudAvatar Size="Size.Medium" Color="@Color.Primary">
                    A
                </MudAvatar>
                <MudText Typo="Typo.subtitle1" id="participant-journey-label">
                    @Command.GetMemberDescription(x => x.HasClearParticipantJourney)
                </MudText>
            </MudStack>
            
        </MudItem>
        <MudItem xs="12" md="4" Class="d-flex align-center">
            <MudRadioGroup @bind-Value="Command.HasClearParticipantJourney" For="@(() => Command.HasClearParticipantJourney)">
                <MudRadio Value="@DipSampleAnswer.Yes">@DipSampleAnswer.Yes.Name</MudRadio>
                <MudRadio Value="@DipSampleAnswer.No">@DipSampleAnswer.No.Name</MudRadio>
                <MudRadio Value="@DipSampleAnswer.NotApplicable">@DipSampleAnswer.NotApplicable.Name</MudRadio>
            </MudRadioGroup>
        </MudItem>

        <MudItem xs="12" md="8">
            <MudStack Row="true" AlignItems="AlignItems.Center">
                <MudAvatar Size="Size.Medium" Color="@Color.Primary">
                    B
                </MudAvatar>            
                <MudText Typo="Typo.subtitle1" id="participant-journey-label">
                    @Command.GetMemberDescription(x => x.ShowsTaskProgression)
                </MudText>
            </MudStack>
        </MudItem>
        <MudItem xs="12" md="4" Class="d-flex align-center">
            <MudRadioGroup @bind-Value="Command.ShowsTaskProgression" For="@(() => Command.ShowsTaskProgression)">
                <MudRadio Value="@DipSampleAnswer.Yes">@DipSampleAnswer.Yes.Name</MudRadio>
                <MudRadio Value="@DipSampleAnswer.No">@DipSampleAnswer.No.Name</MudRadio>
                <MudRadio Value="@DipSampleAnswer.NotApplicable">@DipSampleAnswer.NotApplicable.Name</MudRadio>
            </MudRadioGroup>
        </MudItem>

        <MudItem xs="12" md="8">
            <MudStack Row="true" AlignItems="AlignItems.Center">
                <MudAvatar Size="Size.Medium" Color="@Color.Primary">
                    C
                </MudAvatar>            
                <MudText Typo="Typo.subtitle1" id="participant-journey-label">
                    @Command.GetMemberDescription(x => x.ActivitiesLinkToTask)
                </MudText>
            </MudStack>
        </MudItem>
        <MudItem xs="12" md="4" Class="d-flex align-center">
            <MudRadioGroup @bind-Value="Command.ActivitiesLinkToTask" For="@(() => Command.ActivitiesLinkToTask)">
                <MudRadio Value="@DipSampleAnswer.Yes">@DipSampleAnswer.Yes.Name</MudRadio>
                <MudRadio Value="@DipSampleAnswer.No">@DipSampleAnswer.No.Name</MudRadio>
                <MudRadio Value="@DipSampleAnswer.NotApplicable">@DipSampleAnswer.NotApplicable.Name</MudRadio>
            </MudRadioGroup>
        </MudItem>

        <MudItem xs="12" md="8">
            <MudStack Row="true" AlignItems="AlignItems.Center">
                <MudAvatar Size="Size.Medium" Color="@Color.Primary">
                    D
                </MudAvatar>            
                <MudText Typo="Typo.subtitle1" id="participant-journey-label">
                    @Command.GetMemberDescription(x => x.TTGDemonstratesGoodPRIProcess)
                </MudText>
            </MudStack>

        </MudItem>
        <MudItem xs="12" md="4" Class="d-flex align-center">
            <MudRadioGroup @bind-Value="Command.TTGDemonstratesGoodPRIProcess" For="@(() => Command.TTGDemonstratesGoodPRIProcess)">
                <MudRadio Value="@DipSampleAnswer.Yes">@DipSampleAnswer.Yes.Name</MudRadio>
                <MudRadio Value="@DipSampleAnswer.No">@DipSampleAnswer.No.Name</MudRadio>
                <MudRadio Value="@DipSampleAnswer.NotApplicable">@DipSampleAnswer.NotApplicable.Name</MudRadio>
            </MudRadioGroup>
        </MudItem>
        
        <MudItem xs="12" md="8">
            <MudStack Row="true" AlignItems="AlignItems.Center">
                <MudAvatar Size="Size.Medium" Color="@Color.Primary">
                    E
                </MudAvatar> 
                <MudText Typo="Typo.subtitle1" id="participant-journey-label">
                    @Command.GetMemberDescription(x => x.SupportsJourneyAndAlignsWithDoS)
                </MudText>
            </MudStack>
        </MudItem>
        <MudItem xs="12" md="4" Class="d-flex align-center">
            <MudRadioGroup @bind-Value="Command.SupportsJourneyAndAlignsWithDoS" For="@(() => Command.SupportsJourneyAndAlignsWithDoS)">
                <MudRadio Value="@DipSampleAnswer.Yes">@DipSampleAnswer.Yes.Name</MudRadio>
                <MudRadio Value="@DipSampleAnswer.No">@DipSampleAnswer.No.Name</MudRadio>
                <MudRadio Value="@DipSampleAnswer.NotApplicable">@DipSampleAnswer.NotApplicable.Name</MudRadio>
            </MudRadioGroup>
        </MudItem>

        <MudItem xs="12" md="8">
            <MudStack Row="true" AlignItems="AlignItems.Center">
                <MudAvatar Size="Size.Medium" Color="@Color.Primary">
                    F
                </MudAvatar> 
                <MudText Typo="Typo.subtitle1" id="participant-journey-label">
                    @Command.GetMemberDescription(x => x.TemplatesAlignWithREG)
                </MudText>
            </MudStack>
           
        </MudItem>
        <MudItem xs="12" md="4" Class="d-flex align-center">
            <MudRadioGroup @bind-Value="Command.TemplatesAlignWithREG" For="@(() => Command.TemplatesAlignWithREG)">
                <MudRadio Value="@DipSampleAnswer.Yes">@DipSampleAnswer.Yes.Name</MudRadio>
                <MudRadio Value="@DipSampleAnswer.No">@DipSampleAnswer.No.Name</MudRadio>
                <MudRadio Value="@DipSampleAnswer.NotApplicable">@DipSampleAnswer.NotApplicable.Name</MudRadio>
            </MudRadioGroup>
        </MudItem>
        
        <MudItem xs="12" md="3">
            <MudText Typo="Typo.subtitle1">
                @Command.GetMemberDescription(x => x.Comments)
            </MudText>
        </MudItem>
        <MudItem xs="12" md="9" Class="d-flex align-center">
            <MudTextField Label=""
                          @bind-Value="@Command.Comments"
                          For="@(() => Command.Comments)"
                          ReadOnly="false"
                          Required="true"
                          RequiredError="Comments is required!"
                          Lines="5"
                          MaxLength=@ValidationConstants.NotesLength
                          Immediate="true"> 
            </MudTextField>
            <MudText Color="Color.Secondary">
                Characters: @(Command.Comments?.Length ?? 0) / @ValidationConstants.NotesLength
            </MudText>
        </MudItem>

        <MudItem xs="12" md="8">
            <MudStack Row="true" AlignItems="AlignItems.Center">
                <MudAvatar Size="Size.Medium" Color="@Color.Primary">
                    ?
                </MudAvatar> 
                <MudText Typo="Typo.subtitle1" id="participant-journey-label">
                    @Command.GetMemberDescription(x => x.ComplianceAnswer)
                </MudText>
            </MudStack>
           
        </MudItem>
        <MudItem xs="12" md="4" Class="d-flex align-center">
            <MudRadioGroup @bind-Value="Command.ComplianceAnswer" For="@(() => Command.ComplianceAnswer)">
                <MudRadio Value="@ComplianceAnswer.Compliant">@ComplianceAnswer.Compliant.Name</MudRadio>
                <MudRadio Value="@ComplianceAnswer.NotCompliant">@ComplianceAnswer.NotCompliant.Name</MudRadio>
                <MudRadio Value="@ComplianceAnswer.Unsure">@ComplianceAnswer.Unsure.Name</MudRadio>
            </MudRadioGroup>
        </MudItem>
        
        <MudItem xs="12">
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" OnClick="OnSubmit">Submit</MudButton>
        </MudItem>
    </MudGrid>
</MudForm>


@code {

    private MudForm _form = null!;

    [Parameter] [EditorRequired]  public EventCallback<Command> OnFormSubmit { get; set; }
    [Parameter] [EditorRequired] public Command Command { get; set; } = null!;

    private async Task OnSubmit()
    {
        await _form.Validate();
        if (_form.IsValid)
        {
            await OnFormSubmit.InvokeAsync(Command);
        }
    }

}
