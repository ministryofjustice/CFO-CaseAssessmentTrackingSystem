@using Cfo.Cats.Application.Features.Activities.Commands
@using Cfo.Cats.Application.Features.Activities.Queries
@using Cfo.Cats.Application.Features.Locations.DTOs
@using Cfo.Cats.Domain.Common.Enums
@using Cfo.Cats.Server.UI.Pages.Activities.Components

@inherits CatsComponentBase

<MudDialog>
    <DialogContent>
        @if (model is not null)
        {
            <MudForm @ref="form" Model="model" Validation="@(Validator.ValidateValue(model))">
                <ActivityForm Model="model" />
            </MudForm>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Dialog.Cancel">@ConstantString.Cancel</MudButton>
        <MudLoadingButton Loading="@saving" Color="Color.Primary" OnClick="Submit">@ConstantString.Submit</MudLoadingButton>
    </DialogActions>
</MudDialog>

@code {
    AddActivity.Command? model;
    MudForm form = new();
    bool saving;

    [CascadingParameter]
    public required MudDialogInstance Dialog { get; set; }

    [Parameter, EditorRequired]
    public required Guid ActivityId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var activity = await GetNewMediator().Send(new GetActivityById.Query()
        {
            Id = ActivityId
        });

        model = Mapper.Map<AddActivity.Command>(activity);
        model.ActivityId = ActivityId;

        await base.OnInitializedAsync();
    }

    async Task Submit()
    {    
        if(model is null)
        {
            return;
        }

        try
        {

            saving = true;

            await form.Validate();

            if (form.IsValid is false)
            {
                return;
            }

            var result = await GetNewMediator().Send(model);

            if (result.Succeeded)
            {
                Dialog.Close(DialogResult.Ok(true));
                Snackbar.Add(ConstantString.SaveSuccess, Severity.Info);
            }
            else
            {
                Snackbar.Add(result.ErrorMessage, Severity.Error);
            }

        }
        finally
        {
            saving = false;
        }
    }

}