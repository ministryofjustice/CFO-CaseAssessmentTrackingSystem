@using Cfo.Cats.Application.Features.Dashboard.DTOs

@inherits CatsComponentBase

<MudItem lg="6" md="12">
    @if (_loading)
    {
        <LoadingCard Title="Risk due" />
    }
    else
    {
        @if (Model is { Succeeded: true, Data: not null  })
        {
            <MudCard style="height:100%">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h5">Risk due</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudSwitch T="bool" Value="_byPerson"  ValueChanged="OnByPersonChanged" Color="Color.Info">
                            By Person 
                        </MudSwitch>
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent>
                    <MudTable
                        Items="Model.Data"
                        Hover="true"
                        Striped="true"
                        Filter="new Func<RiskDueAggregateDto,bool>(FilterFunc)">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6">Details</MudText>
                            <MudSpacer />
                            <MudStack>
                                <MudStack>
                                    <MudButton Disabled="@_downloading"
                                               Variant="Variant.Outlined"
                                               Color="Color.Primary"
                                               StartIcon="@Icons.Material.Filled.Download"
                                               Size="Size.Small"
                                               Style="margin-right: 4px; margin-bottom: 4px"
                                               OnClick="OnExport"
                                               IconColor="Color.Surface">
                                        @if (_downloading)
                                        {
                                            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                                            <MudText Class="ms-2"> @ConstantString.Downloading</MudText>
                                        }
                                        else
                                        {
                                            <MudText>@ConstantString.Export</MudText>
                                        }
                                    </MudButton>
                                </MudStack>
                                <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                            </MudStack>
                        </ToolBarContent>
                        <HeaderContent>
                            <MudTh>
                                <MudTableSortLabel SortBy="new Func<RiskDueAggregateDto, object>(x => x.Description)">
                                    Description
                                </MudTableSortLabel>
                            </MudTh>
                            <MudTh>
                                <MudTableSortLabel SortBy="new Func<RiskDueAggregateDto, object>(x => x.Overdue)">
                                    Overdue
                                </MudTableSortLabel>
                            </MudTh>
                            <MudTh>
                                <MudTableSortLabel SortBy="new Func<RiskDueAggregateDto, object>(x => x.Upcoming)">
                                    Upcoming
                                </MudTableSortLabel>
                            </MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Description">
                                @context.Description
                            </MudTd>
                            <MudTd DataLabel="Description">
                                @context.Overdue
                            </MudTd>
                            <MudTd DataLabel="Description">
                                @context.Upcoming
                            </MudTd>
                        </RowTemplate>
                        <PagerContent>
                            <MudTablePager PageSizeOptions="new[] { 5, 10, 50 }"/>
                        </PagerContent>
                    </MudTable>
                </MudCardContent>
            </MudCard>
        }
    }
    
    

</MudItem>


