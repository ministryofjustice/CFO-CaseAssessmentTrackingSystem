@using Cfo.Cats.Application.Features.Participants.Commands
@using Cfo.Cats.Server.UI.Pages.Enrolments.Components

@inherits CatsComponentBase

@inject IValidationService Validator

<MudDialog>
    <DialogContent>
        <RightToWork @ref="RightToWork" Model="Model" />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">@ConstantString.Cancel</MudButton>
        <MudLoadingButton Loading="@_saving" Color="Color.Primary" OnClick="Submit">
            @if (_saving)
            {
                @ConstantString.Saving
            }
            else
            {
                @ConstantString.Save
            }
        </MudLoadingButton>
    </DialogActions>
</MudDialog>

@code
{
    private bool _saving = false;

    RightToWork? RightToWork { get; set; }

    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = default!;

    [Parameter, EditorRequired]
    public required AddRightToWork.Command Model { get; set; }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task Submit()
    {
        try
        {
            _saving = true;

            var succeeded = await RightToWork!.Validate();

            if (succeeded)
            {
                MudDialog.Close(DialogResult.Ok(true));
            }
        }
        finally
        {
            _saving = false;
        }
    }
}