@using Cfo.Cats.Application.Features.Participants.DTOs
@using Cfo.Cats.Application.Features.Participants.Queries
@using Cfo.Cats.Domain.Common.Enums

@inherits CatsComponentBase

@if(Model is not null)
{
    <MudForm Model="Model" ReadOnly>
        <MudGrid Class="pa-3" Spacing="4">
            <MudItem sm="12" md="4">
                <MudCard Style="Height: 100%">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Record</MudText>
                        </CardHeaderContent>
                        <CardHeaderAvatar>
                            <MudAvatar Color="Color.Primary">
                                <MudIcon Icon="@Icons.Material.Filled.Person" />
                            </MudAvatar>
                        </CardHeaderAvatar>
                    </MudCardHeader>
                    <MudCardContent>
                        @if (Model.Identifiers.Any())
                        {
                            foreach (var identifier in Model.Identifiers
                               .OrderBy(id => id.Type.DisplayOrderPriority)
                               .ThenBy(id => id.Value))
                            {
                                <MudTextField Class="mb-2" Value="identifier.Value" Label="@identifier.Type.Name" />
                            }
                        }
                        else
                        {
                            <MudText>No information found.</MudText>
                        }
                    </MudCardContent>
                </MudCard>
            </MudItem>
            <MudItem sm="12" md="8">
                <MudCard Style="Height: 100%">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">Supervising Officer / Offender Manager</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            <MudTooltip Text="Edit">
                                <MudIconButton OnClick="Edit" Icon="@Icons.Material.Filled.Edit" />
                            </MudTooltip>
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudTextField Value="Model.OffenderManager.Name" 
                                      Label="Name" 
                                      Class="mb-2" />

                        <MudTextField Value="Model.OffenderManager.TelephoneNumber" 
                                      Label="Telephone Number"  
                                      Class="mb-2" />

                        <MudTextField Value="Model.OffenderManager.MobileNumber" 
                                      Label="Mobile Number"  
                                      Class="mb-2" />

                        <MudTextField Value="Model.OffenderManager.EmailAddress" 
                                      Label="Email Address"  
                                      Class="mb-2" />

                        <MudTextField Value="Model.OffenderManager.Address" 
                                      Label="Address" 
                                      Lines="4"  
                                      Class="mb-2" />
                    </MudCardContent>
                </MudCard>
            </MudItem>
        </MudGrid>
    </MudForm>
}

@code {
    [Parameter, EditorRequired]
    public required string ParticipantId { get; set; }

    public SentenceDetail? Model { get; private set; }

    public record SentenceDetail(
        ParticipantIdentifierDto[] Identifiers,
        OffenderManager OffenderManager);

    public record OffenderManager(
        string Name,
        string TelephoneNumber,
        string MobileNumber,
        string EmailAddress,
        string Address);

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var identifiers = await GetNewMediator().Send(new GetParticipantIdentifiers.Query()
            {
                ParticipantId = ParticipantId
            });

            Model = new(
                Identifiers: identifiers,
                OffenderManager: new(
                    Name: "Jane Doe",
                    TelephoneNumber: "+4401234567890",
                    MobileNumber: "+4401234567890",
                    EmailAddress: "Jane.Doe@justice.gov.uk",
                    Address: "102, Petty France, London, SW1H 9EA"
                )
            );
        }
        finally
        {
            await base.OnInitializedAsync();
        }
    }

    public async Task Edit()
    {
        await Task.CompletedTask;
    }

}
