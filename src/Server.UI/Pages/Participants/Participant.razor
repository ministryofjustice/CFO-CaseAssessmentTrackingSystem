@page "/pages/participants/{id}"
@using Cfo.Cats.Application.Features.Participants.DTOs
@using Cfo.Cats.Application.Features.Participants.Queries
@using Cfo.Cats.Domain.Common.Enums
@using Cfo.Cats.Server.UI.Pages.Participants.Components
@using Humanizer

@inherits CatsComponentBase

@attribute [Authorize]

<style>
    .primary-tabs .mud-tabs-toolbar .mud-tooltip-root .mud-tab-active{

    }
</style>

<MudContainer Style="width: 100%; min-width: 480px">
    @if (_participant is not null)
    {
        
        <CascadingValue Value="_participant">
            <MudPaper Class="pa-2 ma-2" Elevation="1" Outlined="true">
                <MudGrid Spacing="1" Justify="Justify.SpaceBetween" Class="pa-3">
                      <MudItem>
                        <MudText Typo="Typo.h6" Color="Color.Primary">
                            <b>
                                Case Ref
                            </b>
                        </MudText>
                    </MudItem>
                    <MudItem>
                        <MudText Typo="Typo.h6">
                            @_participant.Id
                        </MudText>
                    </MudItem>
                    <MudSpacer/>
                     <MudItem>
                        <MudText Typo="Typo.h6" Color="Color.Primary">
                            <b>
                                Participant
                            </b>
                        </MudText>
                    </MudItem>
                    <MudItem>
                        <MudText Typo="Typo.h6">
                            @_participant.ParticipantName (@_participant.DateOfBirth)
                        </MudText>
                    </MudItem>
                    <MudSpacer/>
                    
                    <MudItem>
                        <MudText Typo="Typo.h6" Color="Color.Primary">
                            <b>
                                Location
                            </b>
                        </MudText>
                    </MudItem>
                    <MudItem>
                        <MudText Typo="Typo.h6">
                            @_participant.Location
                        </MudText>
                    </MudItem>
                    <MudSpacer/>
                    <MudItem>
                        <MudText Typo="Typo.h6" Color="Color.Primary">
                            <b>
                                Status
                            </b>
                        </MudText>
                    </MudItem>
                    <MudItem>
                        <MudText Typo="Typo.h6">
                            @_participant.EnrolmentStatus!.Name.Humanize()
                        </MudText>
                    </MudItem>
                </MudGrid>
                <RagBar ParticipantId="@Id" />
                <MudMenu ActivationEvent="@MouseEvent.MouseOver" AnchorOrigin="Origin.BottomLeft">
                    <ActivatorContent>
                        <MudChip T="string" Icon="@Icons.Material.Filled.CallToAction">Actions</MudChip>
                    </ActivatorContent>
                    <ChildContent>
                        @* Abandon always available? *@
                        <MudMenuItem Icon="@Icons.Material.Filled.DeleteForever" IconColor="Color.Error">Abandon</MudMenuItem>

                        @if (_participant.EnrolmentStatus == EnrolmentStatus.PendingStatus)
                        {
                            <MudMenuItem Icon="@Icons.Material.Filled.Send" IconColor="Color.Primary">Submit to Provider QA</MudMenuItem>
                        }

                        @if (_participant.EnrolmentStatus == EnrolmentStatus.SubmittedToProviderStatus)
                        {
                            <MudMenuItem Icon="@Icons.Material.Filled.Cancel" IconColor="Color.Primary">Return to Support Worker</MudMenuItem>
                            <MudMenuItem Icon="@Icons.Material.Filled.Send" IconColor="Color.Primary">Submit to QA</MudMenuItem>
                        }

                        @if (_participant.EnrolmentStatus == EnrolmentStatus.SubmittedToAuthorityStatus)
                        {
                            <MudMenuItem Icon="@Icons.Material.Filled.Cancel" IconColor="Color.Primary">Return to PQA</MudMenuItem>
                            <MudMenuItem Icon="@Icons.Material.Filled.Send" IconColor="Color.Primary">Approve</MudMenuItem>
                        }
                    </ChildContent>
                </MudMenu>
                <MudTabs Class="primary-tabs mt-2" Outlined="true" Color="Color.Info" Border="true">
                    <MudTabPanel Text="Case Summary">
                        <CaseSummary />
                    </MudTabPanel>
                    <MudTabPanel Text="Assessments">
                        <CaseAssessment ParticipantId="@Id" />
                    </MudTabPanel>
                    <MudTabPanel Text="Notes">
                        <CaseNotes ParticipantId="@Id"/>
                    </MudTabPanel>
                    <MudTabPanel Text="Contact Log" Disabled>

                    </MudTabPanel>
                    <MudTabPanel Text="PSF" Disabled>

                    </MudTabPanel>
                    <MudTabPanel Text="TimeLine">
                        <CaseTimeline/>
                    </MudTabPanel>
                    <MudTabPanel Text="Distance Travelled" Disabled>

                    </MudTabPanel>
                    <MudTabPanel Text="Case Discussions" Disabled>

                    </MudTabPanel>
                </MudTabs>
            </MudPaper>
        </CascadingValue>
        
    }
</MudContainer>

@code {
    [Parameter] public string Id { get; set; } = default!;
    
    [CascadingParameter] 
    public UserProfile UserProfile { get; set; } = default!;

    private ParticipantSummaryDto? _participant = null;

    protected override async Task OnInitializedAsync()
    {
        _participant = await GetNewMediator().Send(new GetParticipantSummary.Query()
        {
            ParticipantId = Id,
            CurrentUser = UserProfile
        });
    }
}