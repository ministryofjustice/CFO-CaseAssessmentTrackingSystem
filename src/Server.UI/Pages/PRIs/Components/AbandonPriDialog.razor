@using Cfo.Cats.Application.Features.PRIs.Commands
@using Humanizer
@using Cfo.Cats.Application.Features.Participants.DTOs
@using Cfo.Cats.Application.Features.Participants.Commands

@inherits CatsComponentBase
@inject IStringLocalizer<AbandonPriDialog> L

<MudDialog>
    <DialogContent>
        <MudPaper Height="300px" Elevation="0">
            @if (Model is not null)
            {               

                <MudForm @ref="form" Model="Model" Validation="@(Validator.ValidateValue(Model))">
                    <MudTextField @bind-Value="Model.ReasonAbandoned"
                                  Label="@Model.GetMemberDescription(x => x.ReasonAbandoned)"
                                  For="@(() => Model.ReasonAbandoned)"
                                  Lines="4" />
                </MudForm>
            }
        </MudPaper>
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Cancel">@ConstantString.Cancel</MudButton>
        <MudLoadingButton Loading="@saving" Color="Color.Primary" OnClick="Submit">@ConstantString.AbandonPRI</MudLoadingButton>
    </DialogActions>
</MudDialog>

@code {
    MudForm? form = new();

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = default!;

    [EditorRequired]
    [Parameter]
    public AbandonPRI.Command? Model { get; set; }

    bool saving;

    public async Task Submit()
    {
        try
        {
            saving = true;
            await form!.Validate().ConfigureAwait(false);

            if (form.IsValid is false)
            {
                saving = false;
                return;
            }

            var result = await GetNewMediator().Send(Model!);

            if (result.Succeeded)
            {
                Snackbar.Add($"{L["PRI successfully abandoned"]}", Severity.Info);
                MudDialog.Close(DialogResult.Ok(true));
            }
            else
            {
                Snackbar.Add($"{result.ErrorMessage}", Severity.Error);
            }
        }
        finally
        {
            saving = false;
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}
