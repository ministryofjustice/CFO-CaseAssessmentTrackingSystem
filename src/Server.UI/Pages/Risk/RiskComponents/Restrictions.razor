@using Cfo.Cats.Application.Features.Participants.DTOs
@using Cfo.Cats.Server.UI.Components.Stepper
@using FluentValidation.Internal

@inherits CatsComponentBase
@implements IValidatorStrategy<RiskDto>

@if (Model is not null)
{
    <CatsMudStep Title="Restrictions">
        <MudTextField @bind-Value="@Model.ActivityRestrictions"
                      For="@(() => Model.ActivityRestrictions)"
                      Lines="5"
                      Label="@Model.GetMemberDescription(x => x.ActivityRestrictions)"
                      Placeholder="Include here any activity that you are aware of at this time that would not be appropriate." />

        <MudDatePicker @bind-Date="Model.ActivityRestrictionsReceived"
                       Label="@Model.GetMemberDescription(x => x.ActivityRestrictionsReceived)"
                       For="@(() => Model.ActivityRestrictionsReceived)"
                       MaxDate="DateTime.UtcNow.Date"
                       Class="mt-4"
                       Editable="true" />

        <MudDivider Class="mt-8 mb-8"/>

        <MudTextField @bind-Value="@Model.PSFRestrictions" 
                      For="@(() => Model.PSFRestrictions)"
                      Lines="5"
                      Label="@Model.GetMemberDescription(x => x.PSFRestrictions)"
                      Placeholder="Include here any Participant Support Fund (PSF) restrictions you are aware of at this time that would not be appropriate." />

        <MudDatePicker @bind-Date="Model.PSFRestrictionsReceived"
                       Label="@Model.GetMemberDescription(x => x.PSFRestrictionsReceived)"
                       For="@(() => Model.PSFRestrictionsReceived)"
                       MaxDate="DateTime.UtcNow.Date"
                       Class="mt-4"
                       Editable="true" />
    </CatsMudStep>
}

@code {
    [Parameter, EditorRequired]
    public required RiskDto Model { get; set; }

    public Action<ValidationStrategy<RiskDto>> Strategy => (options) =>
    {
        options.IncludeProperties(x => x.ActivityRestrictions);
        options.IncludeProperties(x => x.ActivityRestrictionsReceived);
        options.IncludeProperties(x => x.PSFRestrictions);
        options.IncludeProperties(x => x.PSFRestrictionsReceived);
    };
}
