@using Cfo.Cats.Application.Features.Participants.DTOs
@using Cfo.Cats.Domain.Common.Enums
@using Cfo.Cats.Server.UI.Components.Stepper
@using FluentValidation.Internal

@inherits CatsComponentBase
@implements IValidatorStrategy<RiskDto>

@if (Model is not null)
{
    <CatsMudStep Title="Risk Overview">
        <MudGrid>
            @* Risk to Children *@
            <MudItem xs="4">
                @Model.GetMemberDescription(x => x.RiskToChildren)
            </MudItem>
            <MudItem xs="8">
                <MudToggleGroup @bind-Value="@Model.RiskToChildren" Class="readonly-toggle" CheckMark>
                    <MudToggleItem Value="@RiskLevel.Low">@RiskLevel.Low.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.Medium">@RiskLevel.Medium.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.High">@RiskLevel.High.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.VeryHigh">@RiskLevel.VeryHigh.Name</MudToggleItem>
                </MudToggleGroup>
                <MudTextField ReadOnly Underline="false" For="@(() => Model.RiskToChildren)" hidden />
            </MudItem>
            @* Risk to Public *@
            <MudDivider Class="mt-6" />
            <MudItem xs="4">
                @Model.GetMemberDescription(x => x.RiskToPublic)
            </MudItem>
            <MudItem xs="8">
                <MudToggleGroup @bind-Value="@Model.RiskToPublic" Class="readonly-toggle" CheckMark>
                    <MudToggleItem Value="@RiskLevel.Low">@RiskLevel.Low.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.Medium">@RiskLevel.Medium.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.High">@RiskLevel.High.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.VeryHigh">@RiskLevel.VeryHigh.Name</MudToggleItem>
                </MudToggleGroup>
                <MudTextField ReadOnly Underline="false" For="@(() => Model.RiskToPublic)" hidden />
            </MudItem>
            @* Risk to Known Adult *@
            <MudDivider Class="mt-6" />
            <MudItem xs="4">
                @Model.GetMemberDescription(x => x.RiskToKnownAdult)
            </MudItem>
            <MudItem xs="8">
                <MudToggleGroup @bind-Value="@Model.RiskToKnownAdult" Class="readonly-toggle" CheckMark>
                    <MudToggleItem Value="@RiskLevel.Low">@RiskLevel.Low.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.Medium">@RiskLevel.Medium.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.High">@RiskLevel.High.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.VeryHigh">@RiskLevel.VeryHigh.Name</MudToggleItem>
                </MudToggleGroup>
                <MudTextField ReadOnly Underline="false" For="@(() => Model.RiskToKnownAdult)" hidden />
            </MudItem>
            @* Risk to Staff *@
            <MudDivider Class="mt-6" />
            <MudItem xs="4">
                @Model.GetMemberDescription(x => x.RiskToStaff)
            </MudItem>
            <MudItem xs="8">
                <MudToggleGroup @bind-Value="@Model.RiskToStaff" Class="readonly-toggle" CheckMark>
                    <MudToggleItem Value="@RiskLevel.Low">@RiskLevel.Low.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.Medium">@RiskLevel.Medium.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.High">@RiskLevel.High.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.VeryHigh">@RiskLevel.VeryHigh.Name</MudToggleItem>
                </MudToggleGroup>
                <MudTextField ReadOnly Underline="false" For="@(() => Model.RiskToStaff)" hidden />
            </MudItem>
            @* Risk to Other Prisoners *@
            <MudDivider Class="mt-6" />
            <MudItem xs="4">
                @Model.GetMemberDescription(x => x.RiskToOtherPrisoners)
            </MudItem>
            <MudItem xs="8">
                <MudToggleGroup @bind-Value="@Model.RiskToOtherPrisoners" Class="readonly-toggle" CheckMark>
                    <MudToggleItem Value="@RiskLevel.Low">@RiskLevel.Low.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.Medium">@RiskLevel.Medium.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.High">@RiskLevel.High.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.VeryHigh">@RiskLevel.VeryHigh.Name</MudToggleItem>
                </MudToggleGroup>
                <MudTextField ReadOnly Underline="false" For="@(() => Model.RiskToOtherPrisoners)" hidden />
            </MudItem>
            @* Risk to Self *@
            <MudDivider Class="mt-6" />
            <MudItem xs="4">
                @Model.GetMemberDescription(x => x.RiskToSelf)
            </MudItem>
            <MudItem xs="8">
                <MudToggleGroup @bind-Value="@Model.RiskToSelf" Class="readonly-toggle" CheckMark>
                    <MudToggleItem Value="@RiskLevel.Low">@RiskLevel.Low.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.Medium">@RiskLevel.Medium.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.High">@RiskLevel.High.Name</MudToggleItem>
                    <MudToggleItem Value="@RiskLevel.VeryHigh">@RiskLevel.VeryHigh.Name</MudToggleItem>
                </MudToggleGroup>
                <MudTextField ReadOnly Underline="false" For="@(() => Model.RiskToSelf)" hidden />
            </MudItem>
            @* Risk to Self *@
            <MudDivider Class="mt-6" />
            <MudItem xs="4">
                Risk Details above are relevant to
            </MudItem>
            <MudItem xs="8">
                <div class="d-flex">
                    <MudCheckBox ReadOnly="ReadOnly" @bind-Value="@Model.IsRelevantToCustody" Label="@Model.GetMemberDescription(x => x.IsRelevantToCustody)" />
                    <MudTextField ReadOnly Underline="false" For="@(() => Model.IsRelevantToCustody)" hidden />
                </div>
                <div class="d-flex">
                    <MudCheckBox ReadOnly="ReadOnly" @bind-Value="@Model.IsRelevantToCommunity" Label="@Model.GetMemberDescription(x => x.IsRelevantToCommunity)" />
                    <MudTextField ReadOnly Underline="false" For="@(() => Model.IsRelevantToCommunity)" hidden />
                </div>
            </MudItem>
        </MudGrid>
    </CatsMudStep>
}

@code {
    [Parameter, EditorRequired]
    public required RiskDto Model { get; set; }

    [CascadingParameter]
    public MudForm? Form { get; set; }

    public bool ReadOnly { get; private set; } = false;

    protected override Task OnInitializedAsync()
    {
        Model.IsRelevantToCommunity ??= false;
        Model.IsRelevantToCustody ??= false;

        if(Form is not null)
        {
            ReadOnly = Form.ReadOnly;
        }

        return base.OnInitializedAsync();
    }

    public Action<ValidationStrategy<RiskDto>> Strategy => (options) =>
    {
        options.IncludeProperties(x => x.RiskToChildren);
        options.IncludeProperties(x => x.RiskToPublic);
        options.IncludeProperties(x => x.RiskToKnownAdult);
        options.IncludeProperties(x => x.RiskToStaff);
        options.IncludeProperties(x => x.RiskToOtherPrisoners);
        options.IncludeProperties(x => x.RiskToSelf);
        options.IncludeProperties(x => x.IsRelevantToCommunity);
        options.IncludeProperties(x => x.IsRelevantToCustody);
    };
}
