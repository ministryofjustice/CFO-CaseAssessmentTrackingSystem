@using Cfo.Cats.Server.UI.Components.Participants;
@using Cfo.Cats.Application.Features.Participants.DTOs;
@using Cfo.Cats.Domain.Common.Enums;
@using Humanizer

@inherits ParticipantComponent<RiskHistoryDto[]>

@if (Loading)
{
    <MudLoading Text="Loading"/>
}

@if (ErrorMessage is not null)
{
    <MudAlert Variant="Variant.Outlined" Severity="Severity.Error">
        @ErrorMessage
    </MudAlert>
}

@if (Data is not null)
{
    <MudDataGrid Items="@Data" Striped="true" ExpandSingleRow="true">
        <Columns>
            <HierarchyColumn T="RiskHistoryDto" ButtonDisabledFunc="@(x => x.RiskReviewReason == RiskReviewReason.NoChange || x.RiskReviewReason == RiskReviewReason.NoRiskInformationAvailable)" />
            <TemplateColumn Title="Created" Sortable="true" SortBy="x => x.CreatedDate">
                <CellTemplate>
                    <MudStack>
                        <MudText>
                            @context.Item.CreatedBy 
                        </MudText>
                        <MudText>
                            @context.Item.CreatedDate.ToShortDateString()
                        </MudText>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Completed" Sortable="true" SortBy="x => x.Completed">
                <CellTemplate>
                    <MudStack>
                        <MudText>
                            @context.Item.CompletedBy 
                        </MudText>
                        <MudText>
                            @context.Item.Completed
                        </MudText>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Since Last Review" Sortable="true" SortBy="x => x.DaysSinceLastReview">
                <CellTemplate>
                        @if (context.Item.DaysSinceLastReview > 6)
                        {
                            <MudText>
                                @TimeSpan.FromDays(context.Item.DaysSinceLastReview).Humanize(minUnit: Humanizer.Localisation.TimeUnit.Week)
                            </MudText>
                        }
                        else
                        {
                            <MudText> 
                                @(context.Item.DaysSinceLastReview > 1 ? $"{context.Item.DaysSinceLastReview} days" : $"{context.Item.DaysSinceLastReview} day")
                            </MudText>
                        }
                </CellTemplate>
            </TemplateColumn>
            <PropertyColumn Property="x => x.LocationName" Title="Location" Sortable="true"/>
            <TemplateColumn Title="Review Reason" Sortable="true" SortBy="x => x.RiskReviewReason?.Name">
                <CellTemplate>
                    <MudChip Size="Size.Small" Color="Color.Primary">
                        @context.Item.RiskReviewReason  
                    </MudChip>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
        <ChildRowContent>
            @{
                var riskHistoryItem = context.Item;
            }
            <ViewRisk ParticipantId="@ParticipantId" RiskId="@riskHistoryItem.Id" />
        </ChildRowContent>
        <NoRecordsContent>
            <MudText>@ConstantString.NoRecords</MudText>
        </NoRecordsContent>
        <PagerContent>
            <MudDataGridPager T="RiskHistoryDto" />
        </PagerContent>
    </MudDataGrid>
}
