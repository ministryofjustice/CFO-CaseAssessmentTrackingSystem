@using Cfo.Cats.Application.Features.Participants.DTOs
@using Cfo.Cats.Server.UI.Components.Stepper
@using FluentValidation.Internal

@inherits CatsComponentBase
@implements IValidatorStrategy<RiskDto>

@if(Model is not null)
{
    <CatsMudStep Title="Declaration">
        <MudCheckBox @bind-Value="Model.DeclarationSigned"
                     For="@(() => Model.DeclarationSigned)"
                     Label="I confirm that the Risk information is correct and accurate at the time and date of completing the template and has been considered with the risk levels" />

        <MudTextField @bind-Value="Model.ReferrerName"
                      Disabled="Model.DeclarationSigned is false"
                      For="@(() => Model.ReferrerName)" 
                      Label="@Model.GetMemberDescription(x => x.ReferrerName)" 
                      Class="mt-4" />

        <MudTextField @bind-Value="Model.ReferrerEmail"
                      Disabled="Model.DeclarationSigned is false"
                      For="@(() => Model.ReferrerEmail)"
                      Label="@Model.GetMemberDescription(x => x.ReferrerEmail)" 
                      Class="mt-4" />

        <MudDatePicker @bind-Date="Model.ReferredOn"
                       Disabled="Model.DeclarationSigned is false"
                       Label="@Model.GetMemberDescription(x => x.ReferredOn)"
                       For="@(() => Model.ReferredOn)"
                       MaxDate="DateTime.UtcNow.Date"
                       Class="mt-4"
                       Editable="true" />
    </CatsMudStep>
}

@code {
    [Parameter, EditorRequired]
    public required RiskDto Model { get; set; }

    public Action<ValidationStrategy<RiskDto>> Strategy => (options) =>
    {
        options.IncludeProperties(x => x.DeclarationSigned);
        options.IncludeProperties(x => x.ReferrerName);
        options.IncludeProperties(x => x.ReferrerEmail);
        options.IncludeProperties(x => x.ReferredOn);
    };
}
